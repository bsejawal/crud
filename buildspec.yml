version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - echo "java application build"
      - aws --version
      - echo logging to AWS ECR $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - echo ecr repository URL $ECR_REPOSITORY_URL
      - echo printing CODEBUILD_RESOLVED_SOURCE_VERSION =  $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo pringing CODEBUILD_BUILD_ID = $CODEBUILD_BUILD_ID
      - echo printing CODEBUILD_RESOLVED_SOURCE_VERSION = $CODEBUILD_RESOLVED_SOURCE_VERSION
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo code commit hash = $COMMIT_HASH
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | cut -d":" -f2)
      - echo IMAGE_TAG = $IMAGE_TAG
  build:
    commands:
      - echo Build started on `date`
      - echo Creating artifacts
      - mvn clean package
      - echo Building the Docker image...
      - docker build -t $ECR_REPOSITORY_URL .
      - docker tag $ECR_REPOSITORY_URL:latest $ECR_REPOSITORY_URL:$IMAGE_TAG
  post_build:
    commands:
      - echo Build complated on `date`
      - echo Pushing the Docker image
      - docker push $ECR_REPOSITORY_URL:latest
      - docker push $ECR_REPOSITORY_URL:IMAGE_TAG
      - echo Writing image definition file..
      - printf '[{"name":"spring_boot_test_app", "imageUri":"%s"}]' $ECR_REPOSITORY_URL:$IMAGE_TAG > imagedefination.json
      - cat imagedefination.json
